
>>> lazy_matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul

# Matrix is empty or m_a empty or m_b is empty.

>>> lazy_matrix_mul([], [])
0.0

>>> lazy_matrix_mul([1], [])
Traceback (most recent call last):
    ....
ValueError: shapes (1,) and (0,) not aligned: 1 (dim 0) != 0 (dim 0)

# input Type

>>> lazy_matrix_mul("Yousef", "YOusef")
Traceback (most recent call last):
    ....
numpy.core._exceptions._UFuncNoLoopError: ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U6'), dtype('<U6')) -> None


>>> lazy_matrix_mul([[1]], "YOusef")
Traceback (most recent call last):
    ....
numpy.core._exceptions._UFuncNoLoopError: ufunc 'multiply' did not contain a loop with signature matching types (dtype('<U1'), dtype('<U6')) -> None



# type of inter element.
>>> lazy_matrix_mul([["1"]], [[1]])
Traceback (most recent call last):
    ....
ValueError: data type must provide an itemsize

>>> lazy_matrix_mul([[1]], [["1"]])
Traceback (most recent call last):
    ....
ValueError: data type must provide an itemsize




# all list in list have a same len

>>> lazy_matrix_mul([[1], [1,2]], [[1]])
Traceback (most recent call last):
    ....
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

>>> lazy_matrix_mul([[1, 2], [1, 2]], [[1], [1,2]])
Traceback (most recent call last):
    ....
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.








# can't multiple
>>> lazy_matrix_mul([[1,2]], [[1,2]])
Traceback (most recent call last):
    ....
ValueError: shapes (1,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)


>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
array([[13, 16]])

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
array([[ 7, 10],
       [15, 22]])

