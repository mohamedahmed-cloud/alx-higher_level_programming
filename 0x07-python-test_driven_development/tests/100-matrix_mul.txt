
>>> matrix_mul = __import__("100-matrix_mul").matrix_mul

# Matrix is empty or m_a empty or m_b is empty.

>>> matrix_mul([], [])
Traceback (most recent call last):
    ....
ValueError: m_a can't be empty

>>> matrix_mul([1], [])
Traceback (most recent call last):
    ....
ValueError: m_b can't be empty

# input Type

>>> matrix_mul("Yousef", "YOusef")
Traceback (most recent call last):
    ....
TypeError: m_a must be a list


>>> matrix_mul([[1]], "YOusef")
Traceback (most recent call last):
    ....
TypeError: m_b must be a list

# not a list of list

>>> matrix_mul([1], [2])
Traceback (most recent call last):
    ....
TypeError: m_a must be a list of lists

>>> matrix_mul([[1]], [2])
Traceback (most recent call last):
    ....
TypeError: m_b must be a list of lists


# type of inter element.
>>> matrix_mul([["1"]], [[1]])
Traceback (most recent call last):
    ....
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1]], [["1"]])
Traceback (most recent call last):
    ....
TypeError: m_b should contain only integers or floats

# all list in list have a same len

>>> matrix_mul([[1], [1,2]], [[1]])
Traceback (most recent call last):
    ....
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 2], [1, 2]], [[1], [1,2]])
Traceback (most recent call last):
    ....
TypeError: each row of m_b must be of the same size

# can't multiple
>>> matrix_mul([[1,2]], [[1,2]])
Traceback (most recent call last):
    ....
ValueError: m_a and m_b can't be multiplied


>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]